// Generated by dts-bundle v0.7.3

declare module 'io' {
    import Localizer from 'io/L';
    export = Localizer;
}

declare module 'io/L' {
    import { ILocalizer } from 'io/localizer/ILocalizer';
    import './node/middleware';
    const _default: ILocalizer;
    export default _default;
}

declare module 'io/localizer/ILocalizer' {
    import { Translations } from 'io/Languages';
    import { IOptions } from 'io/Config';
    export interface ILocalizer {
        (...args: any[]): string;
        extend(translations: Translations): this;
        extend(isoCode: string, translations: Translations): this;
        config(opts: IOptions): this;
        lang: string;
        loadSingle(config: {
            path: string;
            support?: string[];
            lang?: string;
        }, req?: Request): any;
        fromReq(req: Request): ILocalizer;
        middleware(config: {
            path: string;
        }): Function;
    }
}

declare module 'io/Languages' {
    export class Language {
    }
    export class Translations {
        [key: string]: string;
    }
    export class Languages {
        [key: string]: Translations;
    }
    const _default: Languages;
    export default _default;
}

declare module 'io/Config' {
    export interface IOptions {
        lang?: string;
        support?: string[];
    }
    export class Config {
        lang: string;
        support: string[];
        setLanguages(support: string[]): void;
        contains(isoCode: string): boolean;
    }
    const _default: Config;
    export default _default;
}

