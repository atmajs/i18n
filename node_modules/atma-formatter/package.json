{
  "name": "atma-formatter",
  "version": "0.8.6",
  "description": "Formatter Util",
  "main": "lib/format.min.js",
  "scripts": {
    "test": "node_modules/.bin/atma test"
  },
  "keywords": [
    "format",
    "format date",
    "format string",
    "format number",
    "localization"
  ],
  "author": {
    "name": "Alex Kit",
    "url": "alex.kit@atmajs.com"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/atmajs/util-format.git"
  },
  "devDependencies": {
    "atma": "latest"
  },
  "readme": "#### Formatter Library\r\n[![Build Status](https://travis-ci.org/atmajs/util-format.png?branch=master)](https://travis-ci.org/atmajs/util-format)\r\n\r\n====\r\n\r\nFeatures:\r\n\r\n- [Date Formatter](#date-formatter)\r\n- [Number Formatter](#number-formatter)\r\n- [String Formatter](#string-formatter)\r\n- [Different Languages and Cultures](#internationalization)\r\n- MaskJS util support\r\n\r\n#### Usage\r\n###### NodeJS\r\n```javascript\r\nvar Formatter = require('atma-formatter');\r\n```\r\n###### Browser\r\n- [examples](examples)\r\n\r\n### Date Formatter\r\n\r\n\r\nPlaceholder | Description\r\n--- | ---\r\n`yyyy` | Full **Year** Number\r\n`yy` | Short **Year** Number\r\n`MM` | **Month** Number in 2 digits, e.g. '03'\r\n`#M` | **Month** Number in one or 2 digits\r\n`Mm` | Short **Month** Name, e.g. 'Jan', 'Feb'\r\n`MMM` | Full **Month** Name, e.g. 'January'\r\n`dd` | **Date** Number in 2 digits\r\n`#d` | **Date** Number in one or 2 digits\r\n`Dd` | Short **Day** Name, e.g. 'Mo', 'Tu'\r\n`DD` | Full **Day** Name, e.g. 'Monday'\r\n`HH` | **Hours** Number in 2 digits, e.g. '03'\r\n`#H` | **Hours** Number in one or 2 digits\r\n`hh` | alias for 'HH'\r\n`#h` | alias for '#H'\r\n`mm` | **Minutes** in 2 digits\r\n`#m` | **Minutes** in on or 2 digits\r\n`ss` | **Seconds** in 2 digits\r\n`#s` | **Seconds** in on or 2 digits\r\n\r\nStandalone NodeJS example:\r\n```javascript\r\nvar format = require('atma-formatter');\r\nvar str = format(new Date, \"#d MMM, yyyy (hh:mm)\");\r\n//>  1 January, 2014 (09:55)\r\n```\r\n\r\nMask example:\r\n_mask_\r\n```sass\r\ndiv > 'Today - ~[format: today, \"#d MMM, yyyy (hh:mm)\"]'\r\n```\r\n_javascript model_\r\n```javascript\r\n{ today: new Date }\r\n```\r\n\r\n_Output_\r\n```html\r\n<div>Today - 1 January, 2014 (09:55)</div>\r\n```\r\n\r\nJavascript example:\r\n```javascript\r\nvar str = mask.$utils.format(new Date, \"#d MMM, yyyy (hh:mm)\");\r\n//>  1 January, 2014 (09:55)\r\n```\r\n\r\n### Number Formatter\r\n\r\nPattern: e.g. `,0.0`\r\n\r\nPlaceholder | Description\r\n--- | ---\r\n`,` | (optional) First char setts the integral part delimiter. Comma is used for default, which is defined by the current culture info.\r\n`0` | Then goes the integral part of the number. More Zeros can be specified for the minimal digit output\r\n`.` | (optional) Floating point. If omitted then the number is rounded to integer.\r\n`0` | (optional) Fraction. When defined, the fraction part of the number is rounded to the specified zeros count\r\n\r\nSamples:\r\n\r\nValue | Formatter | Result\r\n--- | --- | ---\r\n`1234.123` | `,00000.0` | `01,234.1`\r\n`1234.123` | `0` | `1234`\r\n`1.5` | `00.00` | `01.50`\r\n\r\n\r\nStandalone NodeJS example:\r\n```javascript\r\nvar format = require('atma-formatter');\r\nvar str = format(4500.3851, \",0.00\");\r\n//>  4,500.39\r\n```\r\n\r\n_Mask example_\r\n```css\r\ndiv > 'Sum - ~[format: sum, \",0.00\"]'\r\n```\r\n\r\n_Javascript model_\r\n```javascript\r\n{ sum: 4500.3851 }\r\n```\r\n\r\n_Output_\r\n```html\r\n<div>Sum - 4,500.39</div>\r\n```\r\n\r\n_Javascript example_\r\n```javascript\r\nvar str = mask.$utils.format(4500.3851, \",0.00\");\r\n//>  4,500.39\r\n```\r\n\r\n### String Formatter\r\n`{ index[,alignment][ :formatString] }`\r\n\r\n\r\nStandalone NodeJS example:\r\n```javascript\r\nvar format = require('atma-formatter');\r\nvar str = format(\r\n\t\"Name: {0}; Born: {1:dd MMM yyyy}; Salary: ${2:,0.00}\",\r\n\t'John',\r\n\tnew Date(1975, 0, 1),\r\n\t17000\r\n);\r\n//>  Name: John; Born: 01 January 1975; Salary: $17,000.00\r\n```\r\n\r\n\r\n_Mask example_\r\n```css\r\ndiv > '~[format: \"Name: {0}; Born: {1:dd MMM yyyy}; Salary: ${2:,0.00}\", user.name, user.birth, user.salary]'\r\n```\r\n\r\n_Javascript model_\r\n```javascript\r\n{ user: { name: 'John', birth: new Date(1975, 0, 1), salary: 17000 } }\r\n```\r\n\r\n_Output_\r\n```html\r\n<div>Name: John; Born: 01 January 1975; Salary: $17,000.00</div>\r\n```\r\n\r\n_Javascript example_\r\n```javascript\r\nvar str = mask.$utils.format(\"{0:,000}\", 5.35);\r\n//>  005\r\n```\r\n\r\n\r\n### Internationalization\r\nThere are already `EN` and `DE` support.\r\n\r\nAdd culture support sample:\r\n```javascript\r\nvar formatter = require('atma-formatter');\r\nformatter.Lang.$register('ru', {\r\n\tMONTH: ['Январь',...],\r\n\tMONTH_SHORT: ['Ян.',...],\r\n\tDAY: ['Воскресенье',...],\r\n\tDAY_SHORT: ['Bc',...],\r\n\r\n\tNUMBER: {\r\n\t\t// 1 000 000,00\r\n\t\tDelimiter: ' ',\r\n\t\tPoint: ','\r\n\t}\r\n});\r\nformatter.Lang.$use('ru');\r\n```\r\n\r\n#### Build, Test\r\n- Build\r\n\r\n\t```bash\r\n\t$ npm install atma -g\r\n\t$ atma\r\n\t```\r\n\r\n- Test\r\n\r\n\t```bash\r\n\t$ atma test\r\n\t```\r\n\r\n----\r\n(c) MIT - Atma.js Project",
  "readmeFilename": "readme.md",
  "bugs": {
    "url": "https://github.com/atmajs/util-format/issues"
  },
  "homepage": "https://github.com/atmajs/util-format",
  "_id": "atma-formatter@0.8.6",
  "_from": "atma-formatter@~0.8.6"
}
